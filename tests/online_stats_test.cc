#include "lancet2/online_stats.h"

#include <array>

#include "catch2/catch_test_macros.hpp"
#include "catch2/matchers/catch_matchers_floating_point.hpp"

static constexpr std::array<double, 100> EXAMPLE_DATA = {
    0.533963546936826,   1.3041138160360493, 0.3230963316058496, 3.749953627365545,  1.3612936990957207,
    2.7250931102996736,  5.852858066142524,  4.545395301271807,  2.318832756398025,  7.008028639801829,
    10.607179300161889,  8.882847735797494,  12.854265449417175, 7.217919487829922,  7.8202523502621615,
    0.44323287218721497, 14.115307773355456, 5.671856356289066,  14.487414122891847, 7.177740663530425,
    4.782135868991941,   19.989413652409837, 19.00204702007984,  8.005811116512021,  16.64656464835194,
    16.68080365103141,   3.3857131385676738, 9.944965893964621,  9.717900673509021,  14.324567553761339,
    25.442843351316434,  21.479483161556626, 13.297421329412108, 12.739215504355796, 5.53387555922764,
    18.40751922110556,   22.089892859398947, 28.439555254201185, 16.733790472150375, 14.287477648024499,
    35.46926699474657,   15.517672964333684, 9.703431903076345,  12.82456813010667,  11.56863863251736,
    35.83697876074793,   31.770822706623537, 1.505568138358429,  28.701913468668025, 23.865488749443497,
    19.84405336755028,   50.13086272417871,  51.374025982380076, 48.33687042669116,  52.81361004813918,
    5.326901378958618,   44.657993080455945, 24.344159474937808, 13.66979455246448,  40.58249426821658,
    6.113815656318961,   7.452607794046842,  42.09742719958592,  39.66787544255301,  38.0277056591272,
    24.191137872067493,  51.40786514768222,  64.56810843928855,  15.426103427066442, 9.81242879950542,
    45.55348702896406,   32.969438856342265, 15.419849139078723, 42.39622619864042,  22.452189278904182,
    68.89262817935384,   22.659558036946166, 74.04325611068245,  44.42198199193655,  1.2480879634105513,
    65.58466317675098,   32.01672174583094,  0.6342135131493909, 42.235294525234195, 30.08092784290495,
    1.1232232523622734,  12.963610302537687, 79.78845830032628,  51.87476629319603,  46.624649191539916,
    67.12519568109609,   71.92982244496758,  76.55979453354293,  22.930027083736135, 12.24805188489333,
    80.24508109560915,   27.24362261583993,  52.6903417681654,   92.97335638050448,  90.25814133095452};

TEST_CASE("Can compute mean and standard deviation from streaming data", "[lancet2::utils::OnlineStats]") {
  lancet2::OnlineStats stats;
  CHECK(stats.IsEmpty());
  CHECK(stats.Size() == 0);

  for (const auto& val : EXAMPLE_DATA) {
    stats.Add(val);
  }

  CHECK_THAT(stats.Mean(), Catch::Matchers::WithinRel(26.037284995218435, 0.01));
  CHECK_THAT(stats.StandardDeviation(), Catch::Matchers::WithinRel(23.101021872968456, 0.01));
}

TEST_CASE("Can combine 2 online stats objects", "[lancet2::OnlineStats]") {
  lancet2::OnlineStats stats1;
  lancet2::OnlineStats stats2;

  for (std::size_t idx = 0; idx < 50; ++idx) {
    stats1.Add(EXAMPLE_DATA.at(idx));
  }

  for (std::size_t idx = 50; idx < 100; ++idx) {
    stats2.Add(EXAMPLE_DATA.at(idx));
  }

  CHECK_THAT(stats1.Mean(), Catch::Matchers::WithinRel(12.533919860664547, 0.01));
  CHECK_THAT(stats1.StandardDeviation(), Catch::Matchers::WithinRel(9.296253470246267, 0.01));

  CHECK_THAT(stats2.Mean(), Catch::Matchers::WithinRel(39.540650129772324, 0.01));
  CHECK_THAT(stats2.StandardDeviation(), Catch::Matchers::WithinRel(24.892987640437834, 0.01));

  const auto combined = stats1 + stats2;
  CHECK_THAT(combined.Mean(), Catch::Matchers::WithinRel(26.037284995218435, 0.01));
  CHECK_THAT(combined.StandardDeviation(), Catch::Matchers::WithinRel(23.101021872968456, 0.01));
}
