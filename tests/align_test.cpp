#include "lancet/align.h"

#include <string_view>

#include "catch2/catch.hpp"
#include "spdlog/spdlog.h"

TEST_CASE("performs alignment using custom aligner", "align.h") {
  SECTION("complex case 1") {
    constexpr std::string_view ref =
        "AGCCACCCTCCAAACCACAGGGGTCATTCTGGAAACCAAGGCATATCTGTGAACAGGCAGGGTGTTCAGCATCAGAGAGGGGAGCAGGGGCTTCTCCGTGAGCCAGGAGG"
        "CAGGAAGAGACCTGCCCGAAGCTCAGCAGGACAGGGCCAGGCACAGCCGGGTAGCTGCTGGAAACACAGACAGGACCCGCTACTGGCCCAGCTCCCGATATGGCAGACCA"
        "CGATCTCATCCACTGCTCACAGCAGCCCCGTGAGGCAAGCATCATGACCCAAGGTGTACATGGGGAAACTGAGGTTCAGAGGTTTCTCTGTATGAGAAACAAAGGCTCAG"
        "AGAGGTTAGGCAGCCTGCCCAAGGACACACAGCATCAGCAGGTACTCCTGACTGGGGAGCACTGAGTTCACCTCTCCTTCGACAGACAGGGGAGCTTCCCCCCACTCCCT"
        "ACCTGGAGCCCATAGACCTTTGATAATGCCAGGGCTGCCTCTGAGTCTCAACTCACCCCTTGATTTCTTGCACCCCACACTGTACACTAGGCTTCCTGTTTTACACCTAT"
        "CATCTCATCTCATTTTTACAATGGCCCCATC";

    constexpr std::string_view qry =
        "GTTTGGAGGGTGGCTGCTGTATCTCTATTTTCTGTATGAGAAACAAAGGCTCAGAGAGGTTAGGCAGCCTGCCCAAGGACACACAGCATCAGCAGGTACTCCTGACTGGG"
        "GAGCACTGAGTTCACCTCTCCTTCGACAGACAGGGGAGCTTCCCCCCACTCCCTACCTGGAGCCCATAGACCTTTGATAATGCCAGGGCTGCCTCTGAGTCTCAACTCAC"
        "CCCTTGATTTCTTGCACCCCACACTGTACACTACGCTTCCTGTTTTACACCTATCATCTCATCTCATTTTTACAATGGCCCCATC";

    const auto result = lancet::Align(ref, qry);
    spdlog::info("first: {}, len: {}, qry: {}", static_cast<int>(result.ref[0]), result.ref.length(),
                 result.qry.length());
    spdlog::info("cust ref: {}", result.ref);
    spdlog::info("cust qry: {}", result.qry);
    CHECK(result.ref.length() == result.qry.length());
  }

  SECTION("complex case 2") {
    constexpr std::string_view ref =
        "CAAAACAAAAACAAAAACAAAAACAAACCATTAAAATAGAGATCCTAAGACTGACAAAGCCCACTCTTTGTAGCAATAAGATACCAAATTCCAACGTGACTCTAGTATAG"
        "TTTCACATGACAGAGAGCAGGCCCTGAAAGAAATCCAAAGTATTTTACCCCAAAATATATTCTTCTGACATATTTTAAAATGGCCCTGGTGGGCAAATCTACATTCTAGT"
        "GGGGAAATCTACATTCTGTAGAGAATCACCTTCCCTTTCCAGGTCTTTTCCTGATCCAGAGAGATTAACTAGAGTCTGGCACCTTTTAAGGCTTGATAAGAGACATTTAC"
        "CATCTGTTCTACATAATAAGAACCTTGGTTTCCACAACCCCTTATCTTAACCCAGATACTCCTTTCTATTGATTCCTAGCCTTTAGATAATAACTCTTTCAACCAAATGC"
        "CAATCAGAAAATCTTTGTATCCACCTATCCCATCTTTCTGAACCAAACCAATGCATACCTTACGTGTCTAGATTGATGCTTATGTCTCCCTAAAACGTGTAAAACCAACC"
        "TGTAACCCAACACCTTGGGCACATGTTCTCAGGACCTCTTGAG";

    constexpr std::string_view qry =
        "CAAAACAAAAACAAAAACAAACCATTAAAATAGAGATCCTAAGACTGACAAAGCCCACTCTTTGTAGCAATAAGATACCAAATTCCAACGTGACTCTAGTATAGTTTCAC"
        "ATGACAGAGAGCAGGCCCTGAAAGAAATCCAAAGTATTTTACCCCAAAATATATTCTTCTGACATATTTTAAAATGGCCCTGGTGGGCAAATCTACATTCTAGTGGGGAA"
        "ATCTACATTCTGTAGAGAATCACCTTCCCTTTCCAGGTCTTTTCCTGATCCAGAGAGATTAACTAGAGTCTGGCACCTTTTAAGGCTTGATAAGAGACATTTACCATCTG"
        "TTCTACATAATAAGAACCTTGGTTTCCACAACCCCTTATCTTAACCCAGACACTCCTTTCTATTGATTCCTAGCCTTTAGATAATAACTCTTTCAACCAAATGCCAATCA"
        "GAAAATCTTTGTATCCACCTATCCCATCTTTCTGAACCAAACCAATGCATACCTTACGTGTCTAGATTGATGCTTATGTCTCCCTAAAACGTGTAAAACCAACCTGTAAC"
        "CCAACACCTTGGGCACATGTTCTCAGGACCTCTTGAG";

    const auto result = lancet::Align(ref, qry);
    spdlog::info("first: {}, len: {}, qry: {}", static_cast<int>(result.ref[0]), result.ref.length(),
                 result.qry.length());
    spdlog::info("cust ref: {}", result.ref);
    spdlog::info("cust qry: {}", result.qry);
    CHECK(result.ref.length() == result.qry.length());
  }
}
